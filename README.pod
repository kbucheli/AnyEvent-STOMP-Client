=head1 NAME

AnyEvent::STOMP::Client - A Perl STOMP version 1.2 client based on AnyEvent

=head1 SYNOPSIS

  use AnyEvent::STOMP::Client;
  
  my $stomp_client = AnyEvent::STOMP::Client->connect();

  $stomp_client->on_connected(
      sub {
          my $self = shift;

          $self->subscribe('/queue/test-destination');

          $self->send(
              '/queue/test-destination',
              {'content-type' => 'text/plain',},
              "Hello World!"
          );
      }
  );

  $stomp_client->on_message(
      sub {
          my ($self, $header, $body) = @_;
          print "$body\n";
      }
  );

  AnyEvent->condvar->recv;


=head1 DESCRIPTION

=head2 METHODS

=over 4

=item $client = connect $host, $port, $connect_headers

=item $client->disconnect

=item bool $client->is_connected

=item $subscription_id = $client->subscribe $destination, $ack_mode, $additional_headers

=item $client->unsubscribe $destination, $additional_headers

=item $client->send_frame $command, $header, $body

=item $client->ack $ack_id, $transaction_id

=item $client->nack $ack_id, $transaction_id

=item $client->send $destination, $headers, $body

=item $client->begin_transaction $transaction_id, $additional_headers

=item $client->commit_transaction $transaction_id, $additional_headers

=item $client->abort_transaction $transaction_id, $additional_headers

=item $guard = $client->on_send_frame

=item $guard = $client->on_read_frame

=item $guard = $client->on_connected

=item $guard = $client->on_disconnected

=item $guard = $client->on_message

=item $guard = $client->on_receipt

=item $guard = $client->on_error

=item $guard = $client->on_subscribed

=item $guard = $client->on_unsubscribed

=item $client->unregister_callback $guard

=back

=head1 SEE ALSO

L<AnyEvent>, L<Object::Event>, L<STOMP Documentation|http://stomp.github.io/stomp-specification-1.2.html>

=head1 AUTHOR

Raphael Seebacher, E<lt>raphael@seebachers.chE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2013 by Raphael Seebacher

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

